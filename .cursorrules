# 项目规则

## 语言和环境
- 仅使用Rust
- 除必要的crate外不使用第三方依赖
- 跨平台兼容，特别是Windows和Android

## 代码风格
- 遵循Rust标准命名规范
- 使用4空格缩进
- 为所有公共API添加文档
- 注释：英文使用双引号，中文使用单引号

## 技术要求
- 仅使用CPU计算，不使用GPU
- 使用f32作为主要数据类型
- 使用NEAT进化而非传统神经网络
- 内存安全至关重要
- 除非绝对必要，否则不使用unsafe Rust
- 注重可读性和可维护性，即使会牺牲一些性能
- 对crate用户友好易用

## 项目结构
- 模块化设计，关注点分离清晰
- 全面的单元测试
- 对性能关键部分进行基准测试
- 包含可运行示例的examples文件夹

## 文档
- 清晰的API文档
- 以中文注释为主（必要时配合英文说明）
- 为每个主要功能提供使用示例
